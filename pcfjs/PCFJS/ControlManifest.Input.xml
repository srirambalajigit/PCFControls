<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="SriramControls" constructor="PCFCustomFunctionsJS" version="0.0.1" display-name-key="PCFJS Custom Functions" description-key="PCFJS Custom Functions" control-type="standard">
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <type-group name="types">
        <type>SingleLine.Text</type>
        <type>Multiple</type>
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
        <type>DateAndTime.DateAndTime</type>
        <type>TwoOptions</type>
        <type>OptionSet</type>
      </type-group>

    <property name="functionName" display-name-key="functionName" description-key="functionName" of-type="Enum" usage="input" required="true">
       <value name="Math.tanh(number)" display-name-key="Math.tanh(number)" description-key="Returns the hyperbolic tangent of a number.">Math.tanh</value>
      <value name="Math.acosh(number)" display-name-key="Math.cosh(number)" description-key="Returns the hyperbolic arc-cosine of a number.">Math.acosh</value>
      <value name="MyCustomJSFunction(str)" display-name-key="MyCustomJSFunction" description-key="Sample custom JS Function.">MyCustomJSFunction</value>
    
    </property>
             
    <property name="input1" display-name-key="input1" description-key="input1" of-type-group="types" usage="input" required="false" default-value="-4.6"/>
    <property name="input2" display-name-key="input2" description-key="input2" of-type-group="types" usage="input" required="false" />
    <property name="input3" display-name-key="input3" description-key="input3" of-type-group="types" usage="input" required="false" />
    <property name="output1" display-name-key="output1" description-key="output1" of-type-group="types" usage="output" required="false" />
    <property name="output2" display-name-key="output2" description-key="output2" of-type-group="types" usage="output" required="false" />
    <property name="debug" display-name-key="debug" description-key="debug" of-type="Multiple" usage="output" required="false" />
    <!-- 
      Property node's of-type attribute can be of-type-group attribute. 
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/PCFJS.css" order="1" />
      <resx path="strings/PCFJS.1033.resx" version="1.0.0" />
      -->
    </resources>
    
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
  
  </control>
</manifest>